<?php

/*
 * http://views-help.doc.logrus.com/help/views/api-tables
 * http://evolvingweb.ca/story/developing-views-part-i-describing-your-data-views
 * https://api.drupal.org/api/views/views.api.php/function/hook_views_data/7
 */ 

function lybrari_views_api() {
  return array(
    'api' => 3,
    'template path' => drupal_get_path('module', 'lybrari') . '/themes',
  );
}

function lybrari_menu(){
  $items['books-view/%'] = array(
    'type' => MENU_LOCAL_ACTION, 
    'title' => 'Books',
    'description' => 'List books',
    'access callback' => 'user_access',
    'access arguments' => array('view_lybrari_content'),
    'page callback' => 'lybrari_book_view',
    'page arguments' => array(1),
  );  

  return $items;
}


function lybrari_permission() {
  return array(
    'config_lybrari' => array(
      'title' => t('Configure lybrari'),
      'description' => 'Configure lybrari.',
    ),
    'view_lybrari_content'  => array(
      'title' => t('View lybrari content'),
      'description' => 'View lybrari content.',
    ),
  );
}


function lybrari_book_view($id){
  db_set_active('calibre');
  $query = db_select('books', 'b')
    ->fields('b')
    ->condition('b.id', intval(str_replace(',', '', $id)));
  //Join and fields authors table
  $query->LeftJoin('books_authors_link','ba','b.id = ba.book');
  $query->LeftJoin('authors','a','ba.author = a.id');
  $query->addField('a','id','id_author');
  $query->addField('a','name','name_author');
  
  //Join and fields publishers table
  $query->LeftJoin('books_publishers_link','bp','b.id = bp.book');
  $query->LeftJoin('publishers','p','bp.publisher = p.id');
  $query->addField('p','id','id_publisher');
  $query->addField('p','name','name_publisher');

  //Join and fields series table
  $query->LeftJoin('books_series_link','bs','b.id = bs.book');
  $query->LeftJoin('series','s','bs.series = s.id');
  $query->addField('s','id','id_serie');
  $query->addField('s','name','name_serie');

  //Join and fields tags table
  $query->LeftJoin('books_tags_link','bt','b.id = bt.book');
  $query->LeftJoin('tags','t','bt.tag = t.id');
  $query->addField('t','id','id_tag');
  $query->addField('t','name','name_tag');

  //Join and fields languages table
  $query->LeftJoin('books_languages_link','bl','b.id = bl.book');
  $query->LeftJoin('languages','l','bl.lang_code = l.id');
  $query->addField('l','id','id_language');
  $query->addField('l','lang_code','name_language');
 
  $result = $query->execute();
  db_set_active();
  while($record = $result->fetchAssoc()) {
    $book = $record;
  }
  drupal_set_title($book['title']);
  $cover ='';
  if ( $book['has_cover'] == 1 ){
    $lybrari_path = '/sites/default/files/calibre/';
    $cover = $lybrari_path.$book['path'].'/cover.jpg';
    $cover = '<img style="width:100%;height:auto;" src="'.$cover.'">';  
  }
  
  $label_author = t('Author');
  $label_publisher = t('Publisher');
  $label_tag = t('Tag');
  $label_serie = t('Series');
  $label_language = t('Language');
  $label_published = t('Published');
  $label_serie_index = t('Series index');
  $label_isbn = t('ISBN');
  $label_lccn = t('LCCN');
  $label_download = t('Download link');
  $published = $book['pubdate'];
  $published = substr(format_date( strtotime($published), 'short' ),0,10);
  $book_author = l($book['name_author'],'books-author-list/'.$book['id_author'].'/'.$book['name_author']);
  $book_serie = l($book['name_serie'],'books-serie-list/'.$book['id_serie'].'/'.$book['name_serie']);
  $book_tag = l($book['name_tag'],'books-tag-list/'.$book['id_tag'].'/'.$book['name_tag']);
  $book_publisher = l($book['name_publisher'],'books-publisher-list/'.$book['id_publisher'].'/'.$book['name_publisher']);

  drupal_add_css(drupal_get_path('module', 'lybrari') . '/css/book_view.css', array('group' => CSS_DEFAULT, 'every_page' => FALSE));  
 
  $dir = 'sites/default/files/calibre/'.$book['path'];
  $files = scandir($dir);
  $books = array();
  foreach($files as $file){
    $file_ext =  pathinfo( $dir.'/'.$file  ,PATHINFO_EXTENSION ) ;
    if ( $file_ext == 'mobi' || $file_ext == 'epub' || $file_ext == 'fb2' || $file_ext == 'pdf'   ){
        $books[] = l( $file_ext, $dir.'/'.$file  ) ;
    }
  }
  $books = implode(' | ',$books);

  $out = "
    <div class='clearfix'>
      <div class='books-cover-box'>
        $cover
      </div>
      <div class='books-data-box'>
        <table>
        
          <tr>
            <td class='label'>$label_author</td>
            <td class='data'>$book_author</td>
          </tr>
          <tr>
            <td class='label'>$label_publisher</td>
            <td class='data'>$book_publisher</td>
          </tr>
          <tr>
            <td class='label'>$label_tag</td>
            <td class='data'>$book_tag</td>
          </tr>
          <tr>
            <td class='label'>$label_language</td>
            <td class='data'>{$book['name_language']}</td>
          </tr>
          <tr>
            <td class='label'>$label_published</td>
            <td class='data'>$published</td>
          </tr>
          <tr>
            <td class='label'>$label_serie</td>
            <td class='data'>$book_serie</td>
          </tr>
          <tr>
            <td class='label'>$label_serie_index</td>
            <td class='data'>{$book['series_index']}</td>
          </tr>
          <tr>
            <td class='label'>$label_isbn</td>
            <td class='data'>{$book['isbn']}</td>
          </tr>
          <tr>
            <td class='label'>$label_lccn</td>
            <td class='data'>{$book['lccn']}</td>
          </tr>     
          <tr>
            <td class='label'>$label_download</td>
            <td class='data'>{$books}</td>
          </tr>         
          
        </table>

      </div>
    </div>
  ";
  
  return $out;
}
