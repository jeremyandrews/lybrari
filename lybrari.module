<?php

/*
 * http://views-help.doc.logrus.com/help/views/api-tables
 * http://evolvingweb.ca/story/developing-views-part-i-describing-your-data-views
 * https://api.drupal.org/api/views/views.api.php/function/hook_views_data/7
 */ 

function lybrari_views_api() {
  return array(
    'api' => 3,
    'template path' => drupal_get_path('module', 'lybrari') . '/themes',
  );
}

function lybrari_menu(){
  $items['books-view/%'] = array(
    'type' => MENU_LOCAL_ACTION, 
    'title' => 'Books',
    'description' => 'List books',
    'access callback' => 'user_access',
    'access arguments' => array('view_lybrari_content'),
    'page callback' => 'lybrari_book_view',
    'page arguments' => array(1),
  );  

  return $items;
}


function lybrari_permission() {
  return array(
    'config_lybrari' => array(
      'title' => t('Configure lybrari'),
      'description' => 'Configure lybrari.',
    ),
    'view_lybrari_content'  => array(
      'title' => t('View lybrari content'),
      'description' => 'View lybrari content.',
    ),
  );
}


function lybrari_book_view($id) {
  // Convert formatted number to integer. @todo: international support.
  $id = intval(str_replace(',', '', $id));

  db_set_active('calibre');
  $query = db_select('books', 'b')
    ->fields('b', array('id', 'title', 'isbn', 'lccn', 'path', 'has_cover', 'pubdate', 'timestamp', 'last_modified'))
    ->condition('b.id', $id);
  
  //  get publisher information
  $query->LeftJoin('books_publishers_link', 'bp', 'b.id = bp.book');
  $query->LeftJoin('publishers', 'p', 'bp.publisher = p.id');
  $query->addField('p', 'id', 'id_publisher');
  $query->addField('p', 'name', 'name_publisher');

  // get series information
  $query->LeftJoin('books_series_link', 'bs', 'b.id = bs.book');
  $query->LeftJoin('series', 's', 'bs.series = s.id');
  $query->addField('s', 'id', 's_id');
  $query->addField('s', 'name', 's_name');

  // get book description
  $query->LeftJoin('comments', 'c', 'b.id = c.book');
  $query->addField('c', 'text', 'c_text');

  $result = $query->execute();
  db_set_active();
  foreach ($result as $record) {
    $book = $record;
  }
  drupal_set_title($book->title);
  $cover = '';
  if ($book->has_cover == 1) {
    # @todo /site/default/files/calibre
    $lybrari_path = '/calibre/';
    $cover = '<img style="width:100%;height:auto;" src="' . "{$lybrari_path}{$book->path}/cover.jpg" . '">';
  }
  $description = $book->c_text;

  // Get list of all book authors.
  db_set_active('calibre');
  $query = db_select('books_authors_link', 'ba')
    ->fields('ba', array('id', 'book', 'author'))
    ->condition('ba.book', $id);
  $query->LeftJoin('authors', 'a', 'ba.author = a.id');
  $query->orderBy('a.sort', 'ASC');
  $query->addField('a', 'id', 'a_id');
  $query->addField('a', 'name', 'a_name');
  $result = $query->execute();
  db_set_active();
  $authors = array();
  foreach ($result as $author) {
    $authors[] = l($author->a_name, "books-author-list/$author->a_id");
  }

  // Get a list of all book tags.
  db_set_active('calibre');
  $query = db_select('books_tags_link', 'bt')
    ->fields('bt', array('id', 'book', 'tag'))
    ->condition('bt.book', $id);
  $query->LeftJoin('tags', 't', 'bt.tag = t.id');
  $query->addField('t', 'id', 't_id');
  $query->addField('t', 'name', 't_name');
  $result = $query->execute();
  db_set_active();
  $tags = array();
  foreach ($result as $tag) {
    $tags[] = l($tag->t_name, "books-tag-list/$tag->t_id");
  }
  
  $label_author = t('Author');
  $label_publisher = t('Publisher');
  $label_tag = t('Tag');
  $label_series = t('Series');
  //$label_language = t('Language');
  $label_published = t('Published');
  //$label_serie_index = t('Series index');
  $label_isbn = t('ISBN');
  $label_lccn = t('LCCN');
  $label_download = t('Download link');
  $published = $book->pubdate;
  $published = substr(format_date(strtotime($published), 'short'), 0, 10);
  $book_author = implode(' | ', $authors);
  $book_series = l($book->s_name, "books-series-list/$book->s_id/$book->s_name");
  $book_tag = implode(' | ', $tags);
  $book_publisher = l($book->name_publisher, "books-publisher-list/$book->id_publisher/$book->name_publisher");

  drupal_add_css(drupal_get_path('module', 'lybrari') . '/css/book_view.css', array('group' => CSS_DEFAULT, 'every_page' => FALSE));  
 
  # @todo /site/default/files/calibre
  $dir = "/var/www/calibre/$book->path";
  $link = "calibre/$book->path";
  $files = scandir($dir);
  $books = array();
  foreach ($files as $file) {
    $file_ext =  pathinfo("$dir/$file", PATHINFO_EXTENSION);
    if (in_array($file_ext, array('epub', 'mobi', 'azw3', 'cbr', 'pdf'))) {
      $books[] = l($file_ext, "$link/$file");
    }
  }
  $books = implode(' | ' , $books);

  $out = "
    <div class='clearfix'>
      <div class='books-cover-box'>
        $cover
      </div>
      <div class='books-data-box'>
        <table>
        
          <tr>
            <td class='label'>$label_author</td>
            <td class='data'>$book_author</td>
          </tr>
          <tr>
            <td class='label'>$label_publisher</td>
            <td class='data'>$book_publisher</td>
          </tr>
          <tr>
            <td class='label'>$label_tag</td>
            <td class='data'>$book_tag</td>
          </tr>
          <tr>
            <td class='label'>$label_published</td>
            <td class='data'>$published</td>
          </tr>
          <tr>
            <td class='label'>$label_series</td>
            <td class='data'>$book_series</td>
          </tr>
          <tr>
            <td class='label'>$label_isbn</td>
            <td class='data'>{$book->isbn}</td>
          </tr>
          <tr>
            <td class='label'>$label_lccn</td>
            <td class='data'>{$book->lccn}</td>
          </tr>     
          <tr>
            <td class='label'>$label_download</td>
            <td class='data'>{$books}</td>
          </tr>         
          
        </table>

      </div>
      <div class='books-description-box'>
        $description
      </div>
    </div>
  ";
  
  return $out;
}
